{"ast":null,"code":"import _slicedToArray from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport Navigation from './components/Navigation';\nimport Content from './components/Content';\nimport Login from './components/Login';\nimport Protected from './components/Protected';\nimport Register from './components/Register';\nimport Home from './components/Home';\nexport const UserContext = React.createContext([]);\n\nfunction LoginApp() {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const logOutCallback = async () => {\n    await fetch('http://localhost:4000/logout', {\n      method: 'POST',\n      credentials: 'include'\n    }); //clear user from context\n\n    setUser({}); //Navigate back to start page\n\n    navigate('/');\n  };\n\n  useEffect(() => {\n    async function checkRefreshToken() {\n      const result = await (await fetch('http://localhost:4000/refresh_token', {\n        method: 'POST',\n        credentials: 'include',\n        //needed to include the cookie\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })).json();\n      setUser({\n        accesstoken: result.accesstoken\n      });\n      setLoading(false);\n    }\n\n    checkRefreshToken();\n  }, []);\n  if (loading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Loading...\");\n  return React.createElement(UserContext.Provider, {\n    value: [user, setUser],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Navigation, {\n    logOutCallback: logOutCallback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Router, {\n    id: \"/router\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Login, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Register, {\n    path: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Content, {\n    path: \"/content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Home, {\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))));\n}\n\nexport default LoginApp;","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/App.js"],"names":["React","useState","useEffect","Router","navigate","Navigation","Content","Login","Protected","Register","Home","UserContext","createContext","LoginApp","user","setUser","loading","setLoading","logOutCallback","fetch","method","credentials","checkRefreshToken","result","headers","json","accesstoken"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,eAAjC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGX,KAAK,CAACY,aAAN,CAAoB,EAApB,CAApB;;AAEP,SAASC,QAAT,GAAoB;AAAA,oBACMZ,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACXa,IADW;AAAA,QACLC,OADK;;AAAA,qBAEYd,QAAQ,CAAC,IAAD,CAFpB;AAAA;AAAA,QAEXe,OAFW;AAAA,QAEFC,UAFE;;AAIlB,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,KAAK,CAAC,8BAAD,EAAiC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,WAAW,EAAE;AAF6B,KAAjC,CAAX,CADiC,CAKjC;;AACAN,IAAAA,OAAO,CAAC,EAAD,CAAP,CANiC,CAOjC;;AACAX,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GATD;;AAWAF,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeoB,iBAAf,GAAmC;AACjC,YAAMC,MAAM,GAAG,MAAM,CACnB,MAAMJ,KAAK,CAAC,qCAAD,EAAwC;AACjDC,QAAAA,MAAM,EAAE,MADyC;AAEjDC,QAAAA,WAAW,EAAE,SAFoC;AAEzB;AACxBG,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHwC,OAAxC,CADQ,EAQnBC,IARmB,EAArB;AASAV,MAAAA,OAAO,CAAC;AACNW,QAAAA,WAAW,EAAEH,MAAM,CAACG;AADd,OAAD,CAAP;AAGAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDK,IAAAA,iBAAiB;AAClB,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,MAAIN,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACF,IAAD,EAAOC,OAAP,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,cAAc,EAAEG,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF,CADF;AAaD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Router, navigate } from '@reach/router';\n\nimport Navigation from './components/Navigation';\nimport Content from './components/Content';\nimport Login from './components/Login';\nimport Protected from './components/Protected';\nimport Register from './components/Register';\nimport Home from './components/Home';\n\nexport const UserContext = React.createContext([]);\n\nfunction LoginApp() {\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const logOutCallback = async () => {\n    await fetch('http://localhost:4000/logout', {\n      method: 'POST',\n      credentials: 'include'\n    });\n    //clear user from context\n    setUser({});\n    //Navigate back to start page\n    navigate('/');\n  };\n\n  useEffect(() => {\n    async function checkRefreshToken() {\n      const result = await (\n        await fetch('http://localhost:4000/refresh_token', {\n          method: 'POST',\n          credentials: 'include', //needed to include the cookie\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n      ).json();\n      setUser({\n        accesstoken: result.accesstoken\n      });\n      setLoading(false);\n    }\n    checkRefreshToken();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <UserContext.Provider value={[user, setUser]}>\n      <div>\n        <Navigation logOutCallback={logOutCallback} />\n        <Router id=\"/router\">\n          <Login path=\"/login\" />\n          <Register path=\"/register\" />\n          <Content path=\"/content\" />\n          <Home path=\"/\" />\n        </Router>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default LoginApp;\n"]},"metadata":{},"sourceType":"module"}