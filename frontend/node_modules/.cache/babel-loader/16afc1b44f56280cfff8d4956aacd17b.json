{"ast":null,"code":"import _objectSpread from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Protected.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { ToDo } from '../ToDo/ToDo';\nimport { Completed } from '../Completed/Completed';\nimport ls from 'local-storage';\nimport '../App.css';\nimport Plus from \"../assets/graphics/Plus.svg\";\n\nconst Protected = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        showForm = _useState2[0],\n        setShowForm = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showCompleted = _useState6[0],\n        setShowCompleted = _useState6[1]; // const [todos, setTodos] = useState();\n  // const [completed, setCompleted] = useState();\n\n\n  const _useState7 = useState(() => {\n    const localData = ls.get('toDos');\n    return localData ? localData : ['data wiped clean'];\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        todos = _useState8[0],\n        setTodos = _useState8[1];\n\n  const _useState9 = useState(() => {\n    const localData = ls.get('completeds');\n    return localData ? localData : ['data wiped clean'];\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        completed = _useState10[0],\n        setCompleted = _useState10[1];\n\n  useEffect(() => {\n    console.log('LS obj: ', ls.get('toDos')); // const setUp = () => {\n    //   setTodos(ls.get('toDos')), setCompleted(ls.get('completeds'));\n    // };\n    // setUp();\n  }, []);\n\n  const addItem = async e => {\n    e.preventDefault();\n    let newItem = {\n      title: this.newItem.value\n    };\n    const isOnTheList = todos.includes(newItem);\n\n    if (isOnTheList) {\n      setMessage({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem = {\n        title: this.newItem.value,\n        id: Math.random()\n      } && newItem !== '' && setTodos({\n        todos: [...todos, newItem]\n      }) && setMessage({\n        message: 'Added entry to to-do list'\n      }) && (await ls.set('toDos', JSON.stringify(todos)));\n    }\n\n    this.addForm.reset();\n    await ls.set('toDos', JSON.stringify(todos));\n  };\n\n  const completedItem = async item => {\n    const newTodos = todos.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      setCompleted({\n        completed: [...completed, item]\n      });\n      setMessage({\n        message: 'Added to completed list'\n      });\n      setTodos(_objectSpread({}, newTodos));\n      await ls.set('completeds', JSON.stringify(completed));\n      await ls.set('toDos', JSON.stringify([...newTodos]));\n    }\n\n    await ls.set('completeds', JSON.stringify(completed));\n    await ls.set('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await ls.get('completeds');\n    console.log('Here is the completed local state: ');\n    console.log(JSON.parse(completedStore));\n  };\n\n  const removeItem = async item => {\n    const newTodos = completed.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      setCompleted({\n        completed: [...newTodos]\n      });\n      setMessage({\n        message: 'Deleted old to-do'\n      });\n      await ls.set('completeds', JSON.stringify([...newTodos]));\n    }\n\n    await ls.set('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await ls.get('completeds');\n    console.log('current completeds after removal: ', completedRemovals);\n  };\n\n  const toggleInputHandler = () => {\n    setShowForm({\n      showForm: !showForm\n    });\n  };\n\n  const toggleCompletedHandler = () => {\n    setShowCompleted({\n      showCompleted: !showCompleted\n    });\n  };\n\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        user = _useContext2[0];\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await (await fetch('http://localhost:4000/protected', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${user.accesstoken}`\n        }\n      })).json();\n      console.log('user: ', user);\n      console.log('result: ', result);\n    }\n\n    fetchProtected();\n  }, [user]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, user.accesstoken ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, console.log('todos: ', todos), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Your To-Do's\"), React.createElement(\"p\", {\n    className: \"msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, message), React.createElement(\"img\", {\n    src: Plus,\n    alt: \"plus_clickme_show_input_form\",\n    onClick: toggleInputHandler,\n    className: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), showForm === true ? React.createElement(\"div\", {\n    className: \"inputForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: input => this.addForm = input,\n    onSubmit: e => {\n      addItem(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type To-do Here\",\n    id: \"newItemInput\",\n    ref: input => this.newItem = input,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })))) : null), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, todos && todos.map(item => React.createElement(ToDo, {\n    click: () => completedItem(item),\n    title: item.title,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })))))), React.createElement(\"button\", {\n    className: \"completedBtn\",\n    onClick: toggleCompletedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Show Completed\"), showCompleted === true ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, completed && completed.map(item => React.createElement(Completed, {\n    click: () => removeItem(item),\n    title: item.title,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))))))) : null))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"'log in to use the app'\"));\n};\n\nexport default Protected;","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Protected.js"],"names":["React","useEffect","useState","useContext","UserContext","ToDo","Completed","ls","Protected","props","showForm","setShowForm","message","setMessage","showCompleted","setShowCompleted","localData","get","todos","setTodos","completed","setCompleted","console","log","addItem","e","preventDefault","newItem","title","value","isOnTheList","includes","id","Math","random","set","JSON","stringify","addForm","reset","completedItem","item","newTodos","filter","todo","completedStore","parse","removeItem","completedRemovals","toggleInputHandler","toggleCompletedHandler","user","fetchProtected","result","fetch","method","credentials","headers","authorization","accesstoken","json","Plus","input","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { ToDo } from '../ToDo/ToDo';\nimport { Completed } from '../Completed/Completed';\nimport ls from 'local-storage';\nimport '../App.css';\nimport Plus from '../assets/graphics/Plus.svg';\n\nconst Protected = props => {\n  const [showForm, setShowForm] = useState();\n  const [message, setMessage] = useState();\n  const [showCompleted, setShowCompleted] = useState();\n\n  // const [todos, setTodos] = useState();\n  // const [completed, setCompleted] = useState();\n\n  const [todos, setTodos] = useState(() => {\n    const localData = ls.get('toDos');\n    return localData ? localData : ['data wiped clean'];\n  });\n  const [completed, setCompleted] = useState(() => {\n    const localData = ls.get('completeds');\n    return localData ? localData : ['data wiped clean'];\n  });\n\n  useEffect(() => {\n    console.log('LS obj: ', ls.get('toDos'));\n    // const setUp = () => {\n    //   setTodos(ls.get('toDos')), setCompleted(ls.get('completeds'));\n    // };\n    // setUp();\n  }, []);\n\n  const addItem = async e => {\n    e.preventDefault();\n    let newItem = { title: this.newItem.value };\n    const isOnTheList = todos.includes(newItem);\n    if (isOnTheList) {\n      setMessage({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem =\n        { title: this.newItem.value, id: Math.random() } &&\n        newItem !== '' &&\n        setTodos({ todos: [...todos, newItem] }) &&\n        setMessage({ message: 'Added entry to to-do list' }) &&\n        (await ls.set('toDos', JSON.stringify(todos)));\n    }\n    this.addForm.reset();\n    await ls.set('toDos', JSON.stringify(todos));\n  };\n\n  const completedItem = async item => {\n    const newTodos = todos.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      setCompleted({ completed: [...completed, item] });\n      setMessage({ message: 'Added to completed list' });\n      setTodos({ ...newTodos });\n      await ls.set('completeds', JSON.stringify(completed));\n      await ls.set('toDos', JSON.stringify([...newTodos]));\n    }\n    await ls.set('completeds', JSON.stringify(completed));\n    await ls.set('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await ls.get('completeds');\n    console.log('Here is the completed local state: ');\n    console.log(JSON.parse(completedStore));\n  };\n\n  const removeItem = async item => {\n    const newTodos = completed.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      setCompleted({\n        completed: [...newTodos]\n      });\n      setMessage({\n        message: 'Deleted old to-do'\n      });\n      await ls.set('completeds', JSON.stringify([...newTodos]));\n    }\n    await ls.set('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await ls.get('completeds');\n    console.log('current completeds after removal: ', completedRemovals);\n  };\n\n  const toggleInputHandler = () => {\n    setShowForm({ showForm: !showForm });\n  };\n  const toggleCompletedHandler = () => {\n    setShowCompleted({ showCompleted: !showCompleted });\n  };\n\n  const [user] = useContext(UserContext);\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await (\n        await fetch('http://localhost:4000/protected', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            authorization: `Bearer ${user.accesstoken}`\n          }\n        })\n      ).json();\n      console.log('user: ', user);\n      console.log('result: ', result);\n    }\n    fetchProtected();\n  }, [user]);\n\n  return (\n    <div>\n      {user.accesstoken ? (\n        <React.Fragment>\n          {console.log('todos: ', todos)}\n          <div>\n            <div className=\"header\">\n              <h1 className=\"banner\">Your To-Do's</h1>\n              <p className=\"msg\">{message}</p>\n              <img\n                src={Plus}\n                alt=\"plus_clickme_show_input_form\"\n                onClick={toggleInputHandler}\n                className=\"plus\"\n              />\n\n              {showForm === true ? (\n                <div className=\"inputForm\">\n                  <form\n                    ref={input => (this.addForm = input)}\n                    onSubmit={e => {\n                      addItem(e);\n                    }}\n                  >\n                    <div>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Type To-do Here\"\n                        id=\"newItemInput\"\n                        ref={input => (this.newItem = input)}\n                        className=\"input\"\n                      />\n                      <br />\n                      <br />\n                      <button className=\"button\" type=\"submit\">\n                        Add\n                      </button>\n                      <br />\n                      <br />\n                    </div>\n                  </form>\n                </div>\n              ) : null}\n            </div>\n\n            <div className=\"block\">\n              <table>\n                <tbody>\n                  <tr>\n                    <td>\n                      {todos &&\n                        todos.map(item => (\n                          <ToDo\n                            click={() => completedItem(item)}\n                            title={item.title}\n                            key={item.id}\n                          />\n                        ))}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <button className=\"completedBtn\" onClick={toggleCompletedHandler}>\n                Show Completed\n              </button>\n              {showCompleted === true ? (\n                <div>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          {completed &&\n                            completed.map(item => (\n                              <Completed\n                                click={() => removeItem(item)}\n                                title={item.title}\n                                key={item.id}\n                              />\n                            ))}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </React.Fragment>\n      ) : (\n        <p>'log in to use the app'</p>\n      )}\n    </div>\n  );\n};\n\nexport default Protected;\n"]},"metadata":{},"sourceType":"module"}