{"ast":null,"code":"import _slicedToArray from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Protected.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { ToDo } from '../ToDo/ToDo';\nimport { Completed } from '../Completed/Completed';\nimport ls from 'local-storage';\nimport '../App.css';\nimport Plus from \"../assets/graphics/Plus.svg\";\n\nconst Protected = props => {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     todos: ls.get('toDos') || [\n  //       { title: 'note one', id: '231r' },\n  //       { title: 'note two', id: 'efef' },\n  //       { title: 'note three', id: 'sd09s' }\n  //     ],\n  //     message: '',\n  //     completed: ls.get('completeds') || [\n  //       { title: '1', id: 'grhwg' },\n  //       { title: '2', id: '9joi' }\n  //     ],\n  //     showForm: false,\n  //     showCompleted: false\n  //   };\n  // }\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        showForm = _useState2[0],\n        setShowForm = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showCompleted = _useState4[0],\n        setShowCompleted = _useState4[1];\n\n  const _useState5 = useState(() => {\n    const localData = ls.get('toDos');\n    return localData ? JSON.parse(localData) : ['data wiped clean'];\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        todos = _useState6[0],\n        setTodos = _useState6[1];\n\n  const _useState7 = useState(() => {\n    const localData = ls.get('completeds');\n    return localData ? JSON.parse(localData) : ['data wiped clean'];\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        completed = _useState8[0],\n        setCompleted = _useState8[1];\n\n  const addItem = async e => {\n    e.preventDefault();\n    let newItem = {\n      title: this.newItem.value\n    };\n    const isOnTheList = this.state.todos.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem = {\n        title: this.newItem.value,\n        id: this.nextUniqueId()\n      } && newItem !== '' && this.setState({\n        todos: [...this.state.todos, newItem],\n        message: 'Added entry to to-do list'\n      });\n      await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    }\n\n    this.addForm.reset();\n    await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    const store = await localStorage.getItem('toDos');\n    const newTodos = JSON.parse(store);\n  };\n\n  const completedItem = async item => {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      this.setState({\n        completed: [...this.state.completed, item],\n        message: 'Added to completed list',\n        todos: [...newTodos]\n      });\n      await localStorage.setItem('completeds', JSON.stringify(this.state.completed));\n      await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    }\n\n    await localStorage.setItem('completeds', JSON.stringify(this.state.completed));\n    await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await localStorage.getItem('completeds'); // this.setState({\n    //   completedLS: [...completedStore]\n    // });\n\n    console.log('Here is get ');\n    console.log(JSON.parse(completedStore));\n  };\n\n  const removeItem = async item => {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      this.setState({\n        completed: [...newTodos],\n        message: 'Deleted old to-do'\n      });\n      await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    }\n\n    await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await localStorage.getItem('completeds');\n  };\n\n  const toggleInputHandler = () => {\n    setShowForm({\n      showForm: !showForm\n    });\n  };\n\n  const toggleCompletedHandler = () => {\n    setShowCompleted({\n      showCompleted: !showCompleted\n    });\n  };\n\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        user = _useContext2[0];\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await (await fetch('http://localhost:4000/protected', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${user.accesstoken}`\n        }\n      })).json();\n      console.log('user: ', user);\n      console.log('result: ', result);\n    }\n\n    fetchProtected();\n  }, [user]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, user.accesstoken ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Your To-Do's\"), React.createElement(\"img\", {\n    src: Plus,\n    alt: \"plus_clickme_show_input_form\",\n    onClick: toggleInputHandler,\n    className: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), this.state.showForm === true ? React.createElement(\"div\", {\n    className: \"inputForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: input => this.addForm = input,\n    onSubmit: e => {\n      this.addItem(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type To-do Here\",\n    id: \"newItemInput\",\n    ref: input => this.newItem = input,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })))) : null), React.createElement(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, todos.map(item => React.createElement(ToDo, {\n    click: () => this.completedItem(item),\n    title: item.title,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  })))))), React.createElement(\"button\", {\n    className: \"completedBtn\",\n    onClick: toggleCompletedHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Show Completed\"), this.state.showCompleted === true ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, completed.map(item => React.createElement(Completed, {\n    click: () => this.removeItem(item),\n    title: item.title,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }))))))) : null))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"'log in to use the app'\"));\n};\n\nexport default Protected;","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Protected.js"],"names":["React","useEffect","useState","useContext","UserContext","ToDo","Completed","ls","Protected","props","showForm","setShowForm","showCompleted","setShowCompleted","localData","get","JSON","parse","todos","setTodos","completed","setCompleted","addItem","e","preventDefault","newItem","title","value","isOnTheList","state","includes","setState","message","id","nextUniqueId","localStorage","setItem","stringify","addForm","reset","store","getItem","newTodos","completedItem","item","filter","todo","completedStore","console","log","removeItem","completedRemovals","toggleInputHandler","toggleCompletedHandler","user","fetchProtected","result","fetch","method","credentials","headers","authorization","accesstoken","json","Plus","input","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport { ToDo } from '../ToDo/ToDo';\nimport { Completed } from '../Completed/Completed';\nimport ls from 'local-storage';\nimport '../App.css';\nimport Plus from '../assets/graphics/Plus.svg';\n\nconst Protected = props => {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     todos: ls.get('toDos') || [\n  //       { title: 'note one', id: '231r' },\n  //       { title: 'note two', id: 'efef' },\n  //       { title: 'note three', id: 'sd09s' }\n  //     ],\n  //     message: '',\n  //     completed: ls.get('completeds') || [\n  //       { title: '1', id: 'grhwg' },\n  //       { title: '2', id: '9joi' }\n  //     ],\n  //     showForm: false,\n  //     showCompleted: false\n  //   };\n  // }\n\n  const [showForm, setShowForm] = useState();\n\n  const [showCompleted, setShowCompleted] = useState();\n\n  const [todos, setTodos] = useState(() => {\n    const localData = ls.get('toDos');\n    return localData ? JSON.parse(localData) : ['data wiped clean'];\n  });\n  const [completed, setCompleted] = useState(() => {\n    const localData = ls.get('completeds');\n    return localData ? JSON.parse(localData) : ['data wiped clean'];\n  });\n\n  const addItem = async e => {\n    e.preventDefault();\n    let newItem = { title: this.newItem.value };\n    const isOnTheList = this.state.todos.includes(newItem);\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem =\n        { title: this.newItem.value, id: this.nextUniqueId() } &&\n        newItem !== '' &&\n        this.setState({\n          todos: [...this.state.todos, newItem],\n          message: 'Added entry to to-do list'\n        });\n      await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    }\n    this.addForm.reset();\n    await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    const store = await localStorage.getItem('toDos');\n    const newTodos = JSON.parse(store);\n  };\n\n  const completedItem = async item => {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      this.setState({\n        completed: [...this.state.completed, item],\n        message: 'Added to completed list',\n        todos: [...newTodos]\n      });\n      await localStorage.setItem(\n        'completeds',\n        JSON.stringify(this.state.completed)\n      );\n      await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    }\n    await localStorage.setItem(\n      'completeds',\n      JSON.stringify(this.state.completed)\n    );\n    await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await localStorage.getItem('completeds');\n    // this.setState({\n    //   completedLS: [...completedStore]\n    // });\n    console.log('Here is get ');\n    console.log(JSON.parse(completedStore));\n  };\n\n  const removeItem = async item => {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      this.setState({\n        completed: [...newTodos],\n        message: 'Deleted old to-do'\n      });\n      await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    }\n    await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await localStorage.getItem('completeds');\n  };\n\n  const toggleInputHandler = () => {\n    setShowForm({ showForm: !showForm });\n  };\n  const toggleCompletedHandler = () => {\n    setShowCompleted({ showCompleted: !showCompleted });\n  };\n\n  const [user] = useContext(UserContext);\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await (\n        await fetch('http://localhost:4000/protected', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            authorization: `Bearer ${user.accesstoken}`\n          }\n        })\n      ).json();\n      console.log('user: ', user);\n      console.log('result: ', result);\n    }\n    fetchProtected();\n  }, [user]);\n\n  return (\n    <div>\n      {user.accesstoken ? (\n        <React.Fragment>\n          <div>\n            <div className=\"header\">\n              <h1 className=\"banner\">Your To-Do's</h1>\n              <img\n                src={Plus}\n                alt=\"plus_clickme_show_input_form\"\n                onClick={toggleInputHandler}\n                className=\"plus\"\n              />\n\n              {this.state.showForm === true ? (\n                <div className=\"inputForm\">\n                  <form\n                    ref={input => (this.addForm = input)}\n                    onSubmit={e => {\n                      this.addItem(e);\n                    }}\n                  >\n                    <div>\n                      <input\n                        type=\"text\"\n                        placeholder=\"Type To-do Here\"\n                        id=\"newItemInput\"\n                        ref={input => (this.newItem = input)}\n                        className=\"input\"\n                      />\n                      <br />\n                      <br />\n                      <button className=\"button\" type=\"submit\">\n                        Add\n                      </button>\n                      <br />\n                      <br />\n                    </div>\n                  </form>\n                </div>\n              ) : null}\n            </div>\n\n            <div className=\"block\">\n              <table>\n                <tbody>\n                  <tr>\n                    <td>\n                      {todos.map(item => (\n                        <ToDo\n                          click={() => this.completedItem(item)}\n                          title={item.title}\n                          key={item.id}\n                        />\n                      ))}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <button className=\"completedBtn\" onClick={toggleCompletedHandler}>\n                Show Completed\n              </button>\n              {this.state.showCompleted === true ? (\n                <div>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          {completed.map(item => (\n                            <Completed\n                              click={() => this.removeItem(item)}\n                              title={item.title}\n                              key={item.id}\n                            />\n                          ))}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </React.Fragment>\n      ) : (\n        <p>'log in to use the app'</p>\n      )}\n    </div>\n  );\n};\n\nexport default Protected;\n"]},"metadata":{},"sourceType":"module"}