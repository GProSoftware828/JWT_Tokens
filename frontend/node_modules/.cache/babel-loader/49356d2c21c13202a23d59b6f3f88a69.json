{"ast":null,"code":"import _slicedToArray from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\n\nconst Protected = () => {\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        user = _useContext2[0];\n\n  const _useState = useState('You need to login'),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await await fetch('http://localhost:400/protected', {\n        method: 'POST',\n        header: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${user.accesstoken}`\n        }\n      });\n    }\n  }, []);\n};\n\nexport default Protected;","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Protected.js"],"names":["React","useEffect","useState","useContext","UserContext","Protected","user","content","setContent","fetchProtected","result","fetch","method","header","authorization","accesstoken"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,sBACPF,UAAU,CAACC,WAAD,CADH;AAAA;AAAA,QACfE,IADe;;AAAA,oBAEQJ,QAAQ,CAAC,mBAAD,CAFhB;AAAA;AAAA,QAEfK,OAFe;AAAA,QAENC,UAFM;;AAItBP,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,cAAf,GAAgC;AAC9B,YAAMC,MAAM,GAAG,MAAM,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,MAAM,EAAE;AACN,0BAAgB,kBADV;AAENC,UAAAA,aAAa,EAAG,UAASR,IAAI,CAACS,WAAY;AAFpC;AAFyD,OAAnC,CAAhC;AAOD;AACF,GAVQ,EAUN,EAVM,CAAT;AAWD,CAfD;;AAiBA,eAAeV,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\n\nconst Protected = () => {\n  const [user] = useContext(UserContext);\n  const [content, setContent] = useState('You need to login');\n\n  useEffect(() => {\n    async function fetchProtected() {\n      const result = await await fetch('http://localhost:400/protected', {\n        method: 'POST',\n        header: {\n          'Content-Type': 'application/json',\n          authorization: `Bearer ${user.accesstoken}`\n        }\n      });\n    }\n  }, []);\n};\n\nexport default Protected;\n"]},"metadata":{},"sourceType":"module"}