{"ast":null,"code":"var _jsxFileName = \"/Users/georgie/Desktop/To-Do-LS/src/App.js\";\nimport React from 'react';\nimport UniqueId from 'react-html-id';\nimport { ToDo } from './ToDo/ToDo';\nimport { Completed } from './Completed/Completed';\nimport ls from 'local-storage';\nimport './App.css';\nimport Plus from \"./assets/graphics/Plus.svg\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleInputHandler = () => {\n      const doesShow = this.state.showForm;\n      this.setState({\n        showForm: !doesShow\n      });\n    };\n\n    this.toggleCompletedHandler = () => {\n      const doesShow = this.state.showCompleted;\n      this.setState({\n        showCompleted: !doesShow\n      });\n    };\n\n    UniqueId.enableUniqueIds(this);\n    this.state = {\n      todos: ls.get('toDos') || [{\n        title: 'note one',\n        id: '231r'\n      }, {\n        title: 'note two',\n        id: 'efef'\n      }, {\n        title: 'note three',\n        id: 'sd09s'\n      }],\n      message: '',\n      completed: ls.get('completeds') || [{\n        title: '1',\n        id: 'grhwg'\n      }, {\n        title: '2',\n        id: '9joi'\n      }],\n      showForm: false,\n      showCompleted: false\n    };\n  }\n\n  async addItem(e) {\n    e.preventDefault();\n    let newItem = {\n      title: this.newItem.value\n    };\n    const isOnTheList = this.state.todos.includes(newItem);\n\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem = {\n        title: this.newItem.value,\n        id: this.nextUniqueId()\n      } && newItem !== '' && this.setState({\n        todos: [...this.state.todos, newItem],\n        message: 'Added entry to to-do list'\n      });\n      await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    }\n\n    this.addForm.reset();\n    await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    const store = await localStorage.getItem('toDos');\n    const newTodos = JSON.parse(store);\n  }\n\n  async completedItem(item) {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      this.setState({\n        completed: [...this.state.completed, item],\n        message: 'Added to completed list',\n        todos: [...newTodos]\n      });\n      await localStorage.setItem('completeds', JSON.stringify(this.state.completed));\n      await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    }\n\n    await localStorage.setItem('completeds', JSON.stringify(this.state.completed));\n    await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await localStorage.getItem('completeds'); // this.setState({\n    //   completedLS: [...completedStore]\n    // });\n\n    console.log('Here is get ');\n    console.log(JSON.parse(completedStore));\n  }\n\n  async removeItem(item) {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    });\n\n    if (1 === 1) {\n      this.setState({\n        completed: [...newTodos],\n        message: 'Deleted old to-do'\n      });\n      await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    }\n\n    await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await localStorage.getItem('completeds');\n  }\n\n  render() {\n    const _this$state = this.state,\n          todos = _this$state.todos,\n          message = _this$state.message;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Your To-Do's\"), React.createElement(\"p\", {\n      className: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, message), React.createElement(\"img\", {\n      src: Plus,\n      alt: \"plus_clickme_show_input_form\",\n      onClick: this.toggleInputHandler,\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), this.state.showForm === true ? React.createElement(\"div\", {\n      className: \"inputForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      ref: input => this.addForm = input,\n      onSubmit: e => {\n        this.addItem(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type To-do Here\",\n      id: \"newItemInput\",\n      ref: input => this.newItem = input,\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })))) : null), React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.todos.map(item => React.createElement(ToDo, {\n      click: () => this.completedItem(item),\n      title: item.title,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))))), React.createElement(\"button\", {\n      className: \"completedBtn\",\n      onClick: this.toggleCompletedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Show Completed\"), this.state.showCompleted === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.completed.map(item => React.createElement(Completed, {\n      click: () => this.removeItem(item),\n      title: item.title,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }))))))) : null));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/georgie/Desktop/To-Do-LS/src/App.js"],"names":["React","UniqueId","ToDo","Completed","ls","App","Component","constructor","props","toggleInputHandler","doesShow","state","showForm","setState","toggleCompletedHandler","showCompleted","enableUniqueIds","todos","get","title","id","message","completed","addItem","e","preventDefault","newItem","value","isOnTheList","includes","nextUniqueId","localStorage","setItem","JSON","stringify","addForm","reset","store","getItem","newTodos","parse","completedItem","item","filter","todo","completedStore","console","log","removeItem","completedRemovals","render","Plus","input","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UniqueId from 'react-html-id';\nimport { ToDo } from './ToDo/ToDo';\nimport { Completed } from './Completed/Completed';\nimport ls from 'local-storage';\nimport './App.css';\nimport Plus from './assets/graphics/Plus.svg';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    UniqueId.enableUniqueIds(this);\n    this.state = {\n      todos: ls.get('toDos') || [\n        { title: 'note one', id: '231r' },\n        { title: 'note two', id: 'efef' },\n        { title: 'note three', id: 'sd09s' }\n      ],\n      message: '',\n      completed: ls.get('completeds') || [\n        { title: '1', id: 'grhwg' },\n        { title: '2', id: '9joi' }\n      ],\n      showForm: false,\n      showCompleted: false\n    };\n  }\n\n  async addItem(e) {\n    e.preventDefault();\n    let newItem = { title: this.newItem.value };\n    const isOnTheList = this.state.todos.includes(newItem);\n    if (isOnTheList) {\n      this.setState({\n        message: 'This To-do is already on the list.'\n      });\n    } else {\n      newItem =\n        { title: this.newItem.value, id: this.nextUniqueId() } &&\n        newItem !== '' &&\n        this.setState({\n          todos: [...this.state.todos, newItem],\n          message: 'Added entry to to-do list'\n        });\n      await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    }\n    this.addForm.reset();\n    await localStorage.setItem('toDos', JSON.stringify(this.state.todos));\n    const store = await localStorage.getItem('toDos');\n    const newTodos = JSON.parse(store);\n  }\n\n  async completedItem(item) {\n    const newTodos = this.state.todos.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      this.setState({\n        completed: [...this.state.completed, item],\n        message: 'Added to completed list',\n        todos: [...newTodos]\n      });\n      await localStorage.setItem(\n        'completeds',\n        JSON.stringify(this.state.completed)\n      );\n      await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    }\n    await localStorage.setItem(\n      'completeds',\n      JSON.stringify(this.state.completed)\n    );\n    await localStorage.setItem('toDos', JSON.stringify([...newTodos]));\n    const completedStore = await localStorage.getItem('completeds');\n    // this.setState({\n    //   completedLS: [...completedStore]\n    // });\n    console.log('Here is get ');\n    console.log(JSON.parse(completedStore));\n  }\n  async removeItem(item) {\n    const newTodos = this.state.completed.filter(todo => {\n      return todo !== item;\n    });\n    if (1 === 1) {\n      this.setState({\n        completed: [...newTodos],\n        message: 'Deleted old to-do'\n      });\n      await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    }\n    await localStorage.setItem('completeds', JSON.stringify([...newTodos]));\n    const completedRemovals = await localStorage.getItem('completeds');\n  }\n\n  toggleInputHandler = () => {\n    const doesShow = this.state.showForm;\n    this.setState({ showForm: !doesShow });\n  };\n  toggleCompletedHandler = () => {\n    const doesShow = this.state.showCompleted;\n    this.setState({ showCompleted: !doesShow });\n  };\n\n  render() {\n    const { todos, message } = this.state;\n    return (\n      <div>\n        <div className=\"header\">\n          <h1 className=\"banner\">Your To-Do's</h1>\n          <p className=\"msg\">{message}</p>\n          <img\n            src={Plus}\n            alt=\"plus_clickme_show_input_form\"\n            onClick={this.toggleInputHandler}\n            className=\"plus\"\n          />\n\n          {this.state.showForm === true ? (\n            <div className=\"inputForm\">\n              <form\n                ref={input => (this.addForm = input)}\n                onSubmit={e => {\n                  this.addItem(e);\n                }}\n              >\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Type To-do Here\"\n                    id=\"newItemInput\"\n                    ref={input => (this.newItem = input)}\n                    className=\"input\"\n                  />\n                  <br />\n                  <br />\n                  <button className=\"button\" type=\"submit\">\n                    Add\n                  </button>\n                  <br />\n                  <br />\n                </div>\n              </form>\n            </div>\n          ) : null}\n        </div>\n\n        <div className=\"block\">\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  {this.state.todos.map(item => (\n                    <ToDo\n                      click={() => this.completedItem(item)}\n                      title={item.title}\n                      key={item.id}\n                    />\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <button\n            className=\"completedBtn\"\n            onClick={this.toggleCompletedHandler}\n          >\n            Show Completed\n          </button>\n          {this.state.showCompleted === true ? (\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td>\n                      {this.state.completed.map(item => (\n                        <Completed\n                          click={() => this.removeItem(item)}\n                          title={item.title}\n                          key={item.id}\n                        />\n                      ))}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}