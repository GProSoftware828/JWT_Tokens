{"ast":null,"code":"import _slicedToArray from \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Home.js\";\nimport React, { useContext } from 'react';\nimport { Redirect } from '@reach/router'; //Redirect doesn't work\n\nimport { UserContext } from '../App';\n\nconst Content = () => {\n  const _useContext = useContext(UserContext),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        user = _useContext2[0];\n\n  if (!user.accesstoken) return React.createElement(Redirect, {\n    from: \"\",\n    to: \"login\",\n    noThrow: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n  return React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Log In\"));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/georgie/Desktop/Repositories/JWTApp/frontend/src/components/Home.js"],"names":["React","useContext","Redirect","UserContext","Content","user","accesstoken"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CAA0C;;AAC1C,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,sBACLH,UAAU,CAACE,WAAD,CADL;AAAA;AAAA,QACbE,IADa;;AAEpB,MAAI,CAACA,IAAI,CAACC,WAAV,EAAuB,OAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,EAAf;AAAkB,IAAA,EAAE,EAAC,OAArB;AAA6B,IAAA,OAAO,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD,CARD;;AAUA,eAAeF,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from '@reach/router'; //Redirect doesn't work\nimport { UserContext } from '../App';\n\nconst Content = () => {\n  const [user] = useContext(UserContext);\n  if (!user.accesstoken) return <Redirect from=\"\" to=\"login\" noThrow />;\n  return (\n    <button>\n      <a href=\"/login\">Log In</a>\n    </button>\n  );\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}